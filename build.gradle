plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.adarshr.test-logger' version '3.0.0'
    id 'com.gorylenko.gradle-git-properties' version '2.3.1'
    id "io.freefair.lombok" version "6.4.0"
    id "com.github.node-gradle.node" version "3.1.1"
}

group = 'uk.gov.mca'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

testlogger {
    theme 'mocha'
}

repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if(details.requested.group == "org.elasticsearch" && details.requested.name == "elasticsearch") {
            details.useVersion '7.13.4'
            details.because('compatibility with Lucene version 8.8.2')
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.vladmihalcea:hibernate-types-55:2.12.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.10'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.5.10'
    implementation 'com.azure.spring:azure-spring-boot-starter-active-directory:3.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.jetbrains:annotations:21.0.1'

    implementation 'org.springframework.data:spring-data-elasticsearch:4.2.7'

    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    runtimeOnly 'org.postgresql:postgresql'

    developmentOnly("org.springframework.boot:spring-boot-devtools")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:testcontainers:1.16.2'
    testImplementation 'org.testcontainers:junit-jupiter:1.16.2'
    testImplementation 'org.testcontainers:postgresql:1.16.2'
    testImplementation 'org.testcontainers:elasticsearch:1.16.2'
    testImplementation 'org.springframework.batch:spring-batch-test'
}

test {
    useJUnitPlatform()
    filter {
        excludeTestsMatching '*IntegrationTest'
    }
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    useJUnitPlatform()
    filter {
        includeTestsMatching '*IntegrationTest'
    }

    shouldRunAfter test
}

check.dependsOn 'integrationTest'

/**
 * Build, package and serve the Backoffice SPA's static assets
 */
node {
    version = '14.18.1'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")
}

npmInstall {
    workingDir = file("${project.projectDir}/src/main/backoffice")
}

task backofficeSpaNpmBuild(type: NpmTask, dependsOn: 'npmInstall') {
    description = "Building production version of Backoffice SPA"
    workingDir = file("${project.projectDir}/src/main/backoffice")
    args = ["run", "build"]
}

task backofficeSpaUnitTest(type: NpmTask) {
    description = "Run the unit tests for the Backoffice SPA"
    workingDir = file("${project.projectDir}/src/main/backoffice")
    args = ["run", "test"]
}

task backofficeSpaCopyToStaticAssetsDirectory(type: Copy, dependsOn: 'backofficeSpaNpmBuild') {
    from 'src/main/backoffice/build'
    into 'build/resources/main/static/backoffice/.'
}

bootRun.dependsOn 'backofficeSpaCopyToStaticAssetsDirectory'
assemble.dependsOn 'backofficeSpaCopyToStaticAssetsDirectory'
clean {
    delete file('src/main/backoffice/node_modules')
}